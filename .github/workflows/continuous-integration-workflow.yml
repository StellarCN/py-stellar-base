name: Test and Deploy

on:
  push:
  pull_request:
  release:
    types:
      - created
env:
  DEFAULT_PYTHON_VERSION: "3.13"

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install the latest version of uv and set the python version to ${{ env.DEFAULT_PYTHON_VERSION }}
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.DEFAULT_PYTHON_VERSION }}
      - name: Run pre-commit
        run: make pre-commit

  test:
    needs: pre-commit
    strategy:
      fail-fast: false
      matrix:
        # https://endoflife.date/python
        platform:
          [
            { os: "ubuntu-latest", python-version: "3.9" },
            { os: "ubuntu-latest", python-version: "3.10" },
            { os: "ubuntu-latest", python-version: "3.11" },
            { os: "ubuntu-latest", python-version: "3.12" },
            { os: "ubuntu-latest", python-version: "3.13" },
            { os: "ubuntu-latest", python-version: "pypy3.9" },
            { os: "ubuntu-latest", python-version: "pypy3.10" },
            { os: "ubuntu-latest", python-version: "pypy3.11" },
            { os: "macos-latest", python-version: "3.9" },
            { os: "macos-latest", python-version: "3.10" },
            { os: "macos-latest", python-version: "3.11" },
            { os: "macos-latest", python-version: "3.12" },
            { os: "macos-latest", python-version: "3.13" },
            { os: "macos-latest", python-version: "pypy3.9" },
            { os: "macos-latest", python-version: "pypy3.10" },
            { os: "macos-latest", python-version: "pypy3.11" },
            { os: "windows-latest", python-version: "3.9" },
            { os: "windows-latest", python-version: "3.10" },
            { os: "windows-latest", python-version: "3.11" },
            { os: "windows-latest", python-version: "3.12" },
            { os: "windows-latest", python-version: "3.13" },
          ]
    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Wake up httpbin server
        run: |
          curl https://httpbinx.fly.dev/ip

      - name: Install the latest version of uv and set the python version to ${{ matrix.platform.python-version }} on ${{ matrix.platform.os }}
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.platform.python-version }}

      - name: Echo installed packages
        run: uv tree

      - name: Run type check
        run: make type-check

      - name: Test with pytest
        run: make full-unit-test

  integration:
    runs-on: ubuntu-latest
    services:
      rpc:
        image: stellar/quickstart:latest
        ports:
          - 8000:8000
        env:
          ENABLE_LOGS: true
          NETWORK: local
          ENABLE_SOROBAN_RPC: true
          PROTOCOL_VERSION: 22
        options: >-
          --health-cmd "curl --no-progress-meter --fail-with-body -X POST \"http://localhost:8000/soroban/rpc\" -H 'Content-Type: application/json' -d '{\"jsonrpc\":\"2.0\",\"id\":8675309,\"method\":\"getNetwork\"}' && curl --no-progress-meter \"http://localhost:8000/friendbot\" | grep '\"invalid_field\": \"addr\"'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 50
    steps:
      - uses: actions/checkout@v4

      - name: Wake up httpbin server
        run: |
          curl https://httpbinx.fly.dev/ip

      - name: Install the latest version of uv and set the python version to ${{ env.DEFAULT_PYTHON_VERSION }}
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.DEFAULT_PYTHON_VERSION }}

      - name: Test with pytest
        run: make integration-test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  deploy:
    needs: [test, integration]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Install the latest version of uv and set the python version to ${{ env.DEFAULT_PYTHON_VERSION }}
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.DEFAULT_PYTHON_VERSION }}

      - name: Build Packages
        run: make package

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  complete:
    if: always()
    needs: [pre-commit, test, deploy]
    runs-on: ubuntu-latest
    steps:
      - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: exit 1
