name: Test and Deploy

on:
  push:
  pull_request:
  release:
    types:
      - created

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - uses: pre-commit/action@v3.0.1

  test:
    needs: pre-commit
    strategy:
      fail-fast: false
      matrix:
        # https://endoflife.date/python
        platform: [
          { os: 'ubuntu-latest',  python-version: '3.8' },
          { os: 'ubuntu-latest',  python-version: '3.9' },
          { os: 'ubuntu-latest',  python-version: '3.10' },
          { os: 'ubuntu-latest',  python-version: '3.11' },
          { os: 'ubuntu-latest',  python-version: '3.12' },
          { os: 'ubuntu-latest',  python-version: '3.13' },
          { os: 'ubuntu-latest',  python-version: 'pypy3.9' },
          { os: 'ubuntu-latest',  python-version: 'pypy3.10' },
          { os: 'macos-latest',  python-version: '3.8' },
          { os: 'macos-latest',  python-version: '3.9' },
          { os: 'macos-latest',  python-version: '3.10' },
          { os: 'macos-latest',  python-version: '3.11' },
          { os: 'macos-latest',  python-version: '3.12' },
          { os: 'macos-latest',  python-version: '3.13' },
          { os: 'macos-latest',  python-version: 'pypy3.9' },
          { os: 'macos-latest',  python-version: 'pypy3.10' },
          { os: 'windows-latest',  python-version: '3.8' },
          { os: 'windows-latest',  python-version: '3.9' },
          { os: 'windows-latest',  python-version: '3.10' },
          { os: 'windows-latest',  python-version: '3.11' },
          { os: 'windows-latest',  python-version: '3.12' },
          { os: 'windows-latest',  python-version: '3.13' },
        ]
    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Wake up httpbin server
        run: |
          curl https://httpbinx.fly.dev/ip

      - name: Setup Python ${{ matrix.platform.python-version }} on ${{ matrix.platform.os }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.platform.python-version }}

      - name: Install poetry
        run: pip install poetry

      - name: Install dependencies
        run: |
          poetry install --with dev --all-extras

      - name: Echo installed packages
        run: |
          poetry show

      - name: Test with pytest
        run: poetry run pytest -v -rs tests --runslow

  integration:
    runs-on: ubuntu-latest
    services:
      rpc:
        image: stellar/quickstart:testing@sha256:5333ec87069efd7bb61f6654a801dc093bf0aad91f43a5ba84806d3efe4a6322
        ports:
          - 8000:8000
        env:
          ENABLE_LOGS: true
          NETWORK: local
          ENABLE_SOROBAN_RPC: true
          PROTOCOL_VERSION: 22
        options: >-
          --health-cmd "curl --no-progress-meter --fail-with-body -X POST \"http://localhost:8000/soroban/rpc\" -H 'Content-Type: application/json' -d '{\"jsonrpc\":\"2.0\",\"id\":8675309,\"method\":\"getNetwork\"}' && curl --no-progress-meter \"http://localhost:8000/friendbot\" | grep '\"invalid_field\": \"addr\"'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 50
    steps:
      - uses: actions/checkout@v4

      - name: Wake up httpbin server
        run: |
          curl https://httpbinx.fly.dev/ip

      - name: Setup Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install poetry
        run: pip install poetry

      - name: Install dependencies
        run: |
          poetry install --with dev --all-extras

      - name: Echo installed packages
        run: |
          poetry show

      - name: Test with pytest
        run: poetry run pytest -v -rs tests --runslow --integration --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  deploy:
    needs: [ test, integration ]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install poetry
        run: pip install poetry

      - name: Build Packages
        run: poetry build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  complete:
    if: always()
    needs: [ pre-commit, test, deploy ]
    runs-on: ubuntu-latest
    steps:
      - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: exit 1